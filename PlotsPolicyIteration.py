# http://github.com/timestocome



import pandas as pd
import numpy as np
import matplotlib.pyplot as plt




# read in data
probability = pd.read_csv("ReshapedGridPolicy.txt")
probability = probability.astype(int)

value = pd.read_csv("ReshapedGridValue.txt")
value = value.astype(int)

SantaFeAntTrail = [
1, 1, 1, 1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, 1, 1, -1,  -1,  -1,  -1,
-1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  1, -1,  -1,
-1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  1, -1,  -1,
-1,  -1,  -1,  1, 1, 1, 1, -1,  1, 1, 1, 1, 1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, 1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  1, 1, 1, -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  1, 1, -1,  -1,  1, 1, 1, 1, 1, -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  1, -1,  -1,  -1,  -1,  -1,  -1,  1, 1, 1, 1, 1, 1, 1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  1, -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  1, 1, 1, 1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,
-1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1 
]




SantaFeAntTrail = np.asarray(SantaFeAntTrail).reshape(32,32)
print(SantaFeAntTrail.shape)

# heatmap
#fig = plt.figure(1, figsize=(24,8))

#plt.subplot(131)
plt.matshow(SantaFeAntTrail, interpolation='nearest', cmap='Blues')
plt.xlabel("SantaFeAntTrail")
plt.savefig("SantaFeAntTrail.png")

#plt.subplot(132)
plt.matshow(probability, interpolation='nearest', cmap='Blues')
plt.xlabel("Probability")
plt.savefig("Probability_PolicyIteration.png")

#plt.subplot(133)
plt.matshow(value, interpolation='nearest', cmap='Blues')
plt.xlabel("Value")
plt.savefig("Value_PolicyIteration.png")



plt.show() 



